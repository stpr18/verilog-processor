#! /c/iverilog/bin/vvp
:ivl_version "0.9.7 " "(v0_9_7)";
:vpi_time_precision + 0;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_00722A70 .scope module, "alu_test" "alu_test" 2 109;
 .timescale 0 0;
v007714F8_0 .var "a", 31 0;
v007712E8_0 .var "b", 31 0;
v00771188_0 .var "en", 0 0;
v00771760_0 .net "flag", 15 0, L_00772360; 1 drivers
v007718C0_0 .var "func", 4 0;
RS_0073E0C4 .resolv tri, L_007717B8, L_007719C8, C4<zzzzzzzzzzzzzzzz>, C4<zzzzzzzzzzzzzzzz>;
v007716B0_0 .net8 "r1", 15 0, RS_0073E0C4; 2 drivers
RS_0073E0DC .resolv tri, L_00771918, L_00771A20, C4<zzzzzzzzzzzzzzzz>, C4<zzzzzzzzzzzzzzzz>;
v00771130_0 .net8 "r2", 15 0, RS_0073E0DC; 2 drivers
v00771448_0 .net "size", 0 0, C4<1>; 1 drivers
S_00722AF8 .scope module, "alu" "alu" 2 117, 2 3, S_00722A70;
 .timescale 0 0;
L_00772638 .functor AND 1, v00771188_0, L_00771600, C4<1>, C4<1>;
L_00772520 .functor AND 1, v00771188_0, C4<1>, C4<1>, C4<1>;
L_00772360 .functor BUFZ 16, v00771340_0, C4<0000000000000000>, C4<0000000000000000>, C4<0000000000000000>;
v00770B88_0 .net *"_s9", 0 0, L_00771600; 1 drivers
v00770D98_0 .net "a", 31 0, v007714F8_0; 1 drivers
v00770DF0_0 .net "alu16_en", 0 0, L_00772520; 1 drivers
v00770E48_0 .net "alu16_flag", 15 0, v0073B350_0; 1 drivers
v00770EA0_0 .net "alu8_en", 0 0, L_00772638; 1 drivers
v00770EF8_0 .net "alu8_flag", 15 0, v00770F50_0; 1 drivers
v007711E0_0 .net "b", 31 0, v007712E8_0; 1 drivers
v007714A0_0 .net "en", 0 0, v00771188_0; 1 drivers
v00771340_0 .var "flag", 15 0;
v00771290_0 .alias "flag_o", 15 0, v00771760_0;
v00771708_0 .net "func", 4 0, v007718C0_0; 1 drivers
v00771970_0 .alias "o1", 15 0, v007716B0_0;
v00771550_0 .alias "o2", 15 0, v00771130_0;
v00771658_0 .alias "size", 0 0, v00771448_0;
E_0072D2B0 .event edge, v003E2CB0_0;
E_0072D2D0 .event edge, v00770C38_0;
L_007715A8 .part v007714F8_0, 0, 16;
L_00771B28 .part v007712E8_0, 0, 16;
L_007717B8 .part/pv L_00771398, 0, 8, 16;
L_00771918 .part/pv L_00771A78, 0, 8, 16;
L_00771600 .reduce/nor C4<1>;
S_00721EC0 .scope module, "alu8" "alu_impl" 2 15, 2 24, S_00722AF8;
 .timescale 0 0;
P_0073D17C .param/l "LOG2" 2 24, +C4<011>;
P_0073D190 .param/l "SIZE" 2 24, +C4<01000>;
v00770978_0 .net *"_s0", 7 0, C4<zzzzzzzz>; 0 drivers
v007709D0_0 .net *"_s4", 7 0, C4<zzzzzzzz>; 0 drivers
v00770C90_0 .net "a", 15 0, L_007715A8; 1 drivers
v00770FA8_0 .net "b", 15 0, L_00771B28; 1 drivers
v00770A80_0 .alias "en", 0 0, v00770EA0_0;
v00770F50_0 .var "flag", 15 0;
v00770870_0 .net "flag_i", 15 0, v00771340_0; 1 drivers
v00770C38_0 .alias "flag_o", 15 0, v00770EF8_0;
v00770BE0_0 .alias "func", 4 0, v00771708_0;
v00770CE8_0 .net "o1", 7 0, L_00771398; 1 drivers
v00770AD8_0 .net "o2", 7 0, L_00771A78; 1 drivers
v00770B30_0 .var "r1", 7 0;
v00770D40_0 .var "r2", 7 0;
E_0072D390 .event posedge, v00770A80_0;
L_00771398 .functor MUXZ 8, C4<zzzzzzzz>, v00770B30_0, L_00772638, C4<>;
L_00771A78 .functor MUXZ 8, C4<zzzzzzzz>, v00770D40_0, L_00772638, C4<>;
S_007228D8 .scope module, "alu16" "alu_impl" 2 16, 2 24, S_00722AF8;
 .timescale 0 0;
P_0073CE6C .param/l "LOG2" 2 24, +C4<0100>;
P_0073CE80 .param/l "SIZE" 2 24, +C4<010000>;
v003EAEB0_0 .net *"_s0", 15 0, C4<zzzzzzzzzzzzzzzz>; 0 drivers
v003EADF8_0 .net *"_s4", 15 0, C4<zzzzzzzzzzzzzzzz>; 0 drivers
v0073DDB8_0 .alias "a", 31 0, v00770D98_0;
v0073DCB0_0 .alias "b", 31 0, v007711E0_0;
v0073B2F8_0 .alias "en", 0 0, v00770DF0_0;
v0073B350_0 .var "flag", 15 0;
v0073B3A8_0 .alias "flag_i", 15 0, v00770870_0;
v003E2CB0_0 .alias "flag_o", 15 0, v00770E48_0;
v003E2D08_0 .alias "func", 4 0, v00771708_0;
v003E2D60_0 .alias "o1", 15 0, v007716B0_0;
v00770920_0 .alias "o2", 15 0, v00771130_0;
v00770A28_0 .var "r1", 15 0;
v007708C8_0 .var "r2", 15 0;
E_0072D2F0 .event posedge, v0073B2F8_0;
L_007719C8 .functor MUXZ 16, C4<zzzzzzzzzzzzzzzz>, v00770A28_0, L_00772520, C4<>;
L_00771A20 .functor MUXZ 16, C4<zzzzzzzzzzzzzzzz>, v007708C8_0, L_00772520, C4<>;
    .scope S_00721EC0;
T_0 ;
    %wait E_0072D390;
    %load/v 8, v00770BE0_0, 5;
    %cmpi/u 8, 0, 5;
    %jmp/1 T_0.0, 6;
    %cmpi/u 8, 1, 5;
    %jmp/1 T_0.1, 6;
    %cmpi/u 8, 2, 5;
    %jmp/1 T_0.2, 6;
    %cmpi/u 8, 3, 5;
    %jmp/1 T_0.3, 6;
    %cmpi/u 8, 3, 5;
    %jmp/1 T_0.4, 6;
    %cmpi/u 8, 4, 5;
    %jmp/1 T_0.5, 6;
    %cmpi/u 8, 5, 5;
    %jmp/1 T_0.6, 6;
    %cmpi/u 8, 6, 5;
    %jmp/1 T_0.7, 6;
    %cmpi/u 8, 7, 5;
    %jmp/1 T_0.8, 6;
    %cmpi/u 8, 8, 5;
    %jmp/1 T_0.9, 6;
    %cmpi/u 8, 9, 5;
    %jmp/1 T_0.10, 6;
    %cmpi/u 8, 10, 5;
    %jmp/1 T_0.11, 6;
    %cmpi/u 8, 11, 5;
    %jmp/1 T_0.12, 6;
    %cmpi/u 8, 12, 5;
    %jmp/1 T_0.13, 6;
    %cmpi/u 8, 13, 5;
    %jmp/1 T_0.14, 6;
    %jmp T_0.15;
T_0.0 ;
    %load/v 8, v00770C90_0, 8; Select 8 out of 16 bits
    %mov 16, 0, 1;
    %load/v 17, v00770FA8_0, 8; Select 8 out of 16 bits
    %mov 25, 0, 1;
    %add 8, 17, 9;
    %set/v v00770B30_0, 8, 8;
    %ix/load 0, 2, 0;
    %set/x0 v00770F50_0, 16, 1;
    %ix/load 1, 7, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.16, 4;
    %load/x1p 8, v00770C90_0, 1;
    %jmp T_0.17;
T_0.16 ;
    %mov 8, 2, 1;
T_0.17 ;
; Save base=8 wid=1 in lookaside.
    %ix/load 1, 7, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.18, 4;
    %load/x1p 9, v00770FA8_0, 1;
    %jmp T_0.19;
T_0.18 ;
    %mov 9, 2, 1;
T_0.19 ;
; Save base=9 wid=1 in lookaside.
    %and 8, 9, 1;
    %ix/load 1, 7, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.20, 4;
    %load/x1p 9, v00770B30_0, 1;
    %jmp T_0.21;
T_0.20 ;
    %mov 9, 2, 1;
T_0.21 ;
; Save base=9 wid=1 in lookaside.
    %inv 9, 1;
    %and 8, 9, 1;
    %ix/load 1, 7, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.22, 4;
    %load/x1p 9, v00770C90_0, 1;
    %jmp T_0.23;
T_0.22 ;
    %mov 9, 2, 1;
T_0.23 ;
; Save base=9 wid=1 in lookaside.
    %inv 9, 1;
    %ix/load 1, 7, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.24, 4;
    %load/x1p 10, v00770FA8_0, 1;
    %jmp T_0.25;
T_0.24 ;
    %mov 10, 2, 1;
T_0.25 ;
; Save base=10 wid=1 in lookaside.
    %inv 10, 1;
    %and 9, 10, 1;
    %ix/load 1, 7, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.26, 4;
    %load/x1p 10, v00770B30_0, 1;
    %jmp T_0.27;
T_0.26 ;
    %mov 10, 2, 1;
T_0.27 ;
; Save base=10 wid=1 in lookaside.
    %and 9, 10, 1;
    %or 8, 9, 1;
    %ix/load 0, 3, 0;
    %set/x0 v00770F50_0, 8, 1;
    %jmp T_0.15;
T_0.1 ;
    %load/v 8, v00770C90_0, 8; Select 8 out of 16 bits
    %mov 16, 0, 1;
    %load/v 17, v00770FA8_0, 8; Select 8 out of 16 bits
    %mov 25, 0, 1;
    %sub 8, 17, 9;
    %set/v v00770B30_0, 8, 8;
    %ix/load 0, 2, 0;
    %set/x0 v00770F50_0, 16, 1;
    %ix/load 1, 7, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.28, 4;
    %load/x1p 8, v00770C90_0, 1;
    %jmp T_0.29;
T_0.28 ;
    %mov 8, 2, 1;
T_0.29 ;
; Save base=8 wid=1 in lookaside.
    %ix/load 1, 7, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.30, 4;
    %load/x1p 9, v00770FA8_0, 1;
    %jmp T_0.31;
T_0.30 ;
    %mov 9, 2, 1;
T_0.31 ;
; Save base=9 wid=1 in lookaside.
    %inv 9, 1;
    %and 8, 9, 1;
    %ix/load 1, 7, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.32, 4;
    %load/x1p 9, v00770B30_0, 1;
    %jmp T_0.33;
T_0.32 ;
    %mov 9, 2, 1;
T_0.33 ;
; Save base=9 wid=1 in lookaside.
    %inv 9, 1;
    %and 8, 9, 1;
    %ix/load 1, 7, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.34, 4;
    %load/x1p 9, v00770C90_0, 1;
    %jmp T_0.35;
T_0.34 ;
    %mov 9, 2, 1;
T_0.35 ;
; Save base=9 wid=1 in lookaside.
    %inv 9, 1;
    %ix/load 1, 7, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.36, 4;
    %load/x1p 10, v00770FA8_0, 1;
    %jmp T_0.37;
T_0.36 ;
    %mov 10, 2, 1;
T_0.37 ;
; Save base=10 wid=1 in lookaside.
    %and 9, 10, 1;
    %ix/load 1, 7, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.38, 4;
    %load/x1p 10, v00770B30_0, 1;
    %jmp T_0.39;
T_0.38 ;
    %mov 10, 2, 1;
T_0.39 ;
; Save base=10 wid=1 in lookaside.
    %and 9, 10, 1;
    %or 8, 9, 1;
    %ix/load 0, 3, 0;
    %set/x0 v00770F50_0, 8, 1;
    %jmp T_0.15;
T_0.2 ;
    %load/v 8, v00770C90_0, 8; Only need 8 of 16 bits
; Save base=8 wid=8 in lookaside.
    %load/v 16, v00770FA8_0, 8; Only need 8 of 16 bits
; Save base=16 wid=8 in lookaside.
    %and 8, 16, 8;
    %set/v v00770B30_0, 8, 8;
    %ix/load 0, 2, 0;
    %set/x0 v00770F50_0, 0, 1;
    %ix/load 0, 3, 0;
    %set/x0 v00770F50_0, 0, 1;
    %jmp T_0.15;
T_0.3 ;
    %load/v 8, v00770C90_0, 8; Only need 8 of 16 bits
; Save base=8 wid=8 in lookaside.
    %load/v 16, v00770FA8_0, 8; Only need 8 of 16 bits
; Save base=16 wid=8 in lookaside.
    %and 8, 16, 8;
    %set/v v00770B30_0, 8, 8;
    %ix/load 0, 2, 0;
    %set/x0 v00770F50_0, 0, 1;
    %ix/load 0, 3, 0;
    %set/x0 v00770F50_0, 0, 1;
    %jmp T_0.15;
T_0.4 ;
    %load/v 8, v00770C90_0, 8; Only need 8 of 16 bits
; Save base=8 wid=8 in lookaside.
    %load/v 16, v00770FA8_0, 8; Only need 8 of 16 bits
; Save base=16 wid=8 in lookaside.
    %or 8, 16, 8;
    %set/v v00770B30_0, 8, 8;
    %ix/load 0, 2, 0;
    %set/x0 v00770F50_0, 0, 1;
    %ix/load 0, 3, 0;
    %set/x0 v00770F50_0, 0, 1;
    %jmp T_0.15;
T_0.5 ;
    %load/v 8, v00770C90_0, 8; Only need 8 of 16 bits
; Save base=8 wid=8 in lookaside.
    %load/v 16, v00770FA8_0, 8; Only need 8 of 16 bits
; Save base=16 wid=8 in lookaside.
    %xor 8, 16, 8;
    %set/v v00770B30_0, 8, 8;
    %ix/load 0, 2, 0;
    %set/x0 v00770F50_0, 0, 1;
    %ix/load 0, 3, 0;
    %set/x0 v00770F50_0, 0, 1;
    %jmp T_0.15;
T_0.6 ;
    %load/v 8, v00770C90_0, 8; Only need 8 of 16 bits
    %movi 16, 0, 8;
; Save base=8 wid=16 in lookaside.
    %load/v 24, v00770FA8_0, 8; Only need 8 of 16 bits
    %movi 32, 0, 8;
; Save base=24 wid=16 in lookaside.
    %mul 8, 24, 16;
    %set/v v00770B30_0, 8, 8;
    %set/v v00770D40_0, 16, 8;
    %load/v 8, v00770D40_0, 8;
    %mov 16, 0, 1;
    %cmpi/u 8, 0, 9;
    %inv 4, 1;
    %mov 8, 4, 1;
    %ix/load 0, 2, 0;
    %set/x0 v00770F50_0, 8, 1;
    %load/v 8, v00770D40_0, 8;
    %mov 16, 0, 1;
    %cmpi/u 8, 0, 9;
    %inv 4, 1;
    %mov 8, 4, 1;
    %ix/load 0, 3, 0;
    %set/x0 v00770F50_0, 8, 1;
    %jmp T_0.15;
T_0.7 ;
    %load/v 8, v00770FA8_0, 16;
    %load/v 24, v00770C90_0, 8; Select 8 out of 16 bits
    %mov 32, 0, 8;
    %mod 8, 24, 16;
    %set/v v00770D40_0, 8, 8;
    %load/v 8, v00770FA8_0, 16;
    %load/v 24, v00770C90_0, 8; Select 8 out of 16 bits
    %mov 32, 0, 8;
    %div 8, 24, 16;
    %set/v v00770B30_0, 8, 8;
    %jmp T_0.15;
T_0.8 ;
    %load/v 8, v00770C90_0, 8; Select 8 out of 16 bits
    %mov 16, 15, 1;
    %mov 17, 15, 1;
    %mov 18, 15, 1;
    %mov 19, 15, 1;
    %mov 20, 15, 1;
    %mov 21, 15, 1;
    %mov 22, 15, 1;
    %mov 23, 15, 1;
    %load/v 24, v00770FA8_0, 8; Select 8 out of 16 bits
    %mov 32, 31, 1;
    %mov 33, 31, 1;
    %mov 34, 31, 1;
    %mov 35, 31, 1;
    %mov 36, 31, 1;
    %mov 37, 31, 1;
    %mov 38, 31, 1;
    %mov 39, 31, 1;
    %mul 8, 24, 16;
    %set/v v00770B30_0, 8, 8;
    %set/v v00770D40_0, 16, 8;
    %load/v 8, v00770D40_0, 8;
    %mov 16, 0, 1;
    %cmpi/u 8, 0, 9;
    %inv 4, 1;
    %mov 8, 4, 1;
    %ix/load 0, 2, 0;
    %set/x0 v00770F50_0, 8, 1;
    %load/v 8, v00770D40_0, 8;
    %mov 16, 0, 1;
    %cmpi/u 8, 0, 9;
    %inv 4, 1;
    %mov 8, 4, 1;
    %ix/load 0, 3, 0;
    %set/x0 v00770F50_0, 8, 1;
    %jmp T_0.15;
T_0.9 ;
    %load/v 8, v00770FA8_0, 16;
    %load/v 24, v00770C90_0, 16;
    %mod/s 8, 24, 16;
    %set/v v00770D40_0, 8, 8;
    %load/v 8, v00770FA8_0, 16;
    %load/v 24, v00770C90_0, 16;
    %div/s 8, 24, 16;
    %set/v v00770B30_0, 8, 8;
    %jmp T_0.15;
T_0.10 ;
    %load/v 8, v00770C90_0, 8; Only need 8 of 16 bits
; Save base=8 wid=8 in lookaside.
    %inv 8, 8;
    %set/v v00770B30_0, 8, 8;
    %jmp T_0.15;
T_0.11 ;
    %load/v 8, v00770C90_0, 8; Only need 8 of 16 bits
; Save base=8 wid=8 in lookaside.
    %inv 8, 8;
    %addi 8, 1, 8;
    %set/v v00770B30_0, 8, 8;
    %load/v 8, v00770B30_0, 8;
    %mov 16, 0, 1;
    %cmpi/u 8, 0, 9;
    %mov 8, 4, 1;
    %ix/load 0, 2, 0;
    %set/x0 v00770F50_0, 8, 1;
    %jmp T_0.15;
T_0.12 ;
    %load/v 8, v00770C90_0, 8; Select 8 out of 16 bits
    %mov 16, 0, 24;
    %addi 8, 1, 32;
    %set/v v00770B30_0, 8, 8;
    %jmp T_0.15;
T_0.13 ;
    %load/v 8, v00770C90_0, 8; Select 8 out of 16 bits
    %mov 16, 0, 24;
    %subi 8, 1, 32;
    %set/v v00770B30_0, 8, 8;
    %jmp T_0.15;
T_0.14 ;
    %ix/load 0, 2, 0;
    %set/x0 v00770F50_0, 2, 1;
    %load/v 8, v00770C90_0, 8; Select 8 out of 16 bits
    %mov 16, 0, 1;
    %load/v 17, v00770FA8_0, 3; Only need 3 of 16 bits
; Save base=17 wid=3 in lookaside.
    %ix/get 0, 17, 3;
    %shiftl/i0  8, 9;
    %set/v v00770B30_0, 8, 8;
    %ix/load 0, 2, 0;
    %set/x0 v00770F50_0, 16, 1;
    %load/v 8, v00770FA8_0, 3; Only need 3 of 16 bits
; Save base=8 wid=3 in lookaside.
    %ix/get 1, 8, 3;
    %jmp/1 T_0.40, 4;
    %load/x1p 8, v00770C90_0, 1;
    %jmp T_0.41;
T_0.40 ;
    %mov 8, 2, 1;
T_0.41 ;
; Save base=8 wid=1 in lookaside.
    %ix/load 0, 2, 0;
    %set/x0 v00770F50_0, 8, 1;
    %jmp T_0.15;
T_0.15 ;
    %load/v 8, v00770B30_0, 8;
    %mov 16, 0, 1;
    %cmpi/u 8, 0, 9;
    %mov 8, 4, 1;
    %ix/load 0, 0, 0;
    %set/x0 v00770F50_0, 8, 1;
    %ix/load 1, 7, 0;
    %mov 4, 0, 1;
    %jmp/1 T_0.42, 4;
    %load/x1p 8, v00770B30_0, 1;
    %jmp T_0.43;
T_0.42 ;
    %mov 8, 2, 1;
T_0.43 ;
; Save base=8 wid=1 in lookaside.
    %ix/load 0, 1, 0;
    %set/x0 v00770F50_0, 8, 1;
    %jmp T_0;
    .thread T_0;
    .scope S_007228D8;
T_1 ;
    %wait E_0072D2F0;
    %load/v 8, v003E2D08_0, 5;
    %cmpi/u 8, 0, 5;
    %jmp/1 T_1.0, 6;
    %cmpi/u 8, 1, 5;
    %jmp/1 T_1.1, 6;
    %cmpi/u 8, 2, 5;
    %jmp/1 T_1.2, 6;
    %cmpi/u 8, 3, 5;
    %jmp/1 T_1.3, 6;
    %cmpi/u 8, 3, 5;
    %jmp/1 T_1.4, 6;
    %cmpi/u 8, 4, 5;
    %jmp/1 T_1.5, 6;
    %cmpi/u 8, 5, 5;
    %jmp/1 T_1.6, 6;
    %cmpi/u 8, 6, 5;
    %jmp/1 T_1.7, 6;
    %cmpi/u 8, 7, 5;
    %jmp/1 T_1.8, 6;
    %cmpi/u 8, 8, 5;
    %jmp/1 T_1.9, 6;
    %cmpi/u 8, 9, 5;
    %jmp/1 T_1.10, 6;
    %cmpi/u 8, 10, 5;
    %jmp/1 T_1.11, 6;
    %cmpi/u 8, 11, 5;
    %jmp/1 T_1.12, 6;
    %cmpi/u 8, 12, 5;
    %jmp/1 T_1.13, 6;
    %cmpi/u 8, 13, 5;
    %jmp/1 T_1.14, 6;
    %jmp T_1.15;
T_1.0 ;
    %load/v 8, v0073DDB8_0, 16; Select 16 out of 32 bits
    %mov 24, 0, 1;
    %load/v 25, v0073DCB0_0, 16; Select 16 out of 32 bits
    %mov 41, 0, 1;
    %add 8, 25, 17;
    %set/v v00770A28_0, 8, 16;
    %ix/load 0, 2, 0;
    %set/x0 v0073B350_0, 24, 1;
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_1.16, 4;
    %load/x1p 8, v0073DDB8_0, 1;
    %jmp T_1.17;
T_1.16 ;
    %mov 8, 2, 1;
T_1.17 ;
; Save base=8 wid=1 in lookaside.
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_1.18, 4;
    %load/x1p 9, v0073DCB0_0, 1;
    %jmp T_1.19;
T_1.18 ;
    %mov 9, 2, 1;
T_1.19 ;
; Save base=9 wid=1 in lookaside.
    %and 8, 9, 1;
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_1.20, 4;
    %load/x1p 9, v00770A28_0, 1;
    %jmp T_1.21;
T_1.20 ;
    %mov 9, 2, 1;
T_1.21 ;
; Save base=9 wid=1 in lookaside.
    %inv 9, 1;
    %and 8, 9, 1;
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_1.22, 4;
    %load/x1p 9, v0073DDB8_0, 1;
    %jmp T_1.23;
T_1.22 ;
    %mov 9, 2, 1;
T_1.23 ;
; Save base=9 wid=1 in lookaside.
    %inv 9, 1;
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_1.24, 4;
    %load/x1p 10, v0073DCB0_0, 1;
    %jmp T_1.25;
T_1.24 ;
    %mov 10, 2, 1;
T_1.25 ;
; Save base=10 wid=1 in lookaside.
    %inv 10, 1;
    %and 9, 10, 1;
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_1.26, 4;
    %load/x1p 10, v00770A28_0, 1;
    %jmp T_1.27;
T_1.26 ;
    %mov 10, 2, 1;
T_1.27 ;
; Save base=10 wid=1 in lookaside.
    %and 9, 10, 1;
    %or 8, 9, 1;
    %ix/load 0, 3, 0;
    %set/x0 v0073B350_0, 8, 1;
    %jmp T_1.15;
T_1.1 ;
    %load/v 8, v0073DDB8_0, 16; Select 16 out of 32 bits
    %mov 24, 0, 1;
    %load/v 25, v0073DCB0_0, 16; Select 16 out of 32 bits
    %mov 41, 0, 1;
    %sub 8, 25, 17;
    %set/v v00770A28_0, 8, 16;
    %ix/load 0, 2, 0;
    %set/x0 v0073B350_0, 24, 1;
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_1.28, 4;
    %load/x1p 8, v0073DDB8_0, 1;
    %jmp T_1.29;
T_1.28 ;
    %mov 8, 2, 1;
T_1.29 ;
; Save base=8 wid=1 in lookaside.
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_1.30, 4;
    %load/x1p 9, v0073DCB0_0, 1;
    %jmp T_1.31;
T_1.30 ;
    %mov 9, 2, 1;
T_1.31 ;
; Save base=9 wid=1 in lookaside.
    %inv 9, 1;
    %and 8, 9, 1;
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_1.32, 4;
    %load/x1p 9, v00770A28_0, 1;
    %jmp T_1.33;
T_1.32 ;
    %mov 9, 2, 1;
T_1.33 ;
; Save base=9 wid=1 in lookaside.
    %inv 9, 1;
    %and 8, 9, 1;
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_1.34, 4;
    %load/x1p 9, v0073DDB8_0, 1;
    %jmp T_1.35;
T_1.34 ;
    %mov 9, 2, 1;
T_1.35 ;
; Save base=9 wid=1 in lookaside.
    %inv 9, 1;
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_1.36, 4;
    %load/x1p 10, v0073DCB0_0, 1;
    %jmp T_1.37;
T_1.36 ;
    %mov 10, 2, 1;
T_1.37 ;
; Save base=10 wid=1 in lookaside.
    %and 9, 10, 1;
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_1.38, 4;
    %load/x1p 10, v00770A28_0, 1;
    %jmp T_1.39;
T_1.38 ;
    %mov 10, 2, 1;
T_1.39 ;
; Save base=10 wid=1 in lookaside.
    %and 9, 10, 1;
    %or 8, 9, 1;
    %ix/load 0, 3, 0;
    %set/x0 v0073B350_0, 8, 1;
    %jmp T_1.15;
T_1.2 ;
    %load/v 8, v0073DDB8_0, 16; Only need 16 of 32 bits
; Save base=8 wid=16 in lookaside.
    %load/v 24, v0073DCB0_0, 16; Only need 16 of 32 bits
; Save base=24 wid=16 in lookaside.
    %and 8, 24, 16;
    %set/v v00770A28_0, 8, 16;
    %ix/load 0, 2, 0;
    %set/x0 v0073B350_0, 0, 1;
    %ix/load 0, 3, 0;
    %set/x0 v0073B350_0, 0, 1;
    %jmp T_1.15;
T_1.3 ;
    %load/v 8, v0073DDB8_0, 16; Only need 16 of 32 bits
; Save base=8 wid=16 in lookaside.
    %load/v 24, v0073DCB0_0, 16; Only need 16 of 32 bits
; Save base=24 wid=16 in lookaside.
    %and 8, 24, 16;
    %set/v v00770A28_0, 8, 16;
    %ix/load 0, 2, 0;
    %set/x0 v0073B350_0, 0, 1;
    %ix/load 0, 3, 0;
    %set/x0 v0073B350_0, 0, 1;
    %jmp T_1.15;
T_1.4 ;
    %load/v 8, v0073DDB8_0, 16; Only need 16 of 32 bits
; Save base=8 wid=16 in lookaside.
    %load/v 24, v0073DCB0_0, 16; Only need 16 of 32 bits
; Save base=24 wid=16 in lookaside.
    %or 8, 24, 16;
    %set/v v00770A28_0, 8, 16;
    %ix/load 0, 2, 0;
    %set/x0 v0073B350_0, 0, 1;
    %ix/load 0, 3, 0;
    %set/x0 v0073B350_0, 0, 1;
    %jmp T_1.15;
T_1.5 ;
    %load/v 8, v0073DDB8_0, 16; Only need 16 of 32 bits
; Save base=8 wid=16 in lookaside.
    %load/v 24, v0073DCB0_0, 16; Only need 16 of 32 bits
; Save base=24 wid=16 in lookaside.
    %xor 8, 24, 16;
    %set/v v00770A28_0, 8, 16;
    %ix/load 0, 2, 0;
    %set/x0 v0073B350_0, 0, 1;
    %ix/load 0, 3, 0;
    %set/x0 v0073B350_0, 0, 1;
    %jmp T_1.15;
T_1.6 ;
    %load/v 8, v0073DDB8_0, 16; Only need 16 of 32 bits
    %movi 24, 0, 16;
; Save base=8 wid=32 in lookaside.
    %load/v 40, v0073DCB0_0, 16; Only need 16 of 32 bits
    %movi 56, 0, 16;
; Save base=40 wid=32 in lookaside.
    %mul 8, 40, 32;
    %set/v v00770A28_0, 8, 16;
    %set/v v007708C8_0, 24, 16;
    %load/v 8, v007708C8_0, 16;
    %mov 24, 0, 1;
    %cmpi/u 8, 0, 17;
    %inv 4, 1;
    %mov 8, 4, 1;
    %ix/load 0, 2, 0;
    %set/x0 v0073B350_0, 8, 1;
    %load/v 8, v007708C8_0, 16;
    %mov 24, 0, 1;
    %cmpi/u 8, 0, 17;
    %inv 4, 1;
    %mov 8, 4, 1;
    %ix/load 0, 3, 0;
    %set/x0 v0073B350_0, 8, 1;
    %jmp T_1.15;
T_1.7 ;
    %load/v 8, v0073DCB0_0, 32;
    %load/v 40, v0073DDB8_0, 16; Select 16 out of 32 bits
    %mov 56, 0, 16;
    %mod 8, 40, 32;
    %set/v v007708C8_0, 8, 16;
    %load/v 8, v0073DCB0_0, 32;
    %load/v 40, v0073DDB8_0, 16; Select 16 out of 32 bits
    %mov 56, 0, 16;
    %div 8, 40, 32;
    %set/v v00770A28_0, 8, 16;
    %jmp T_1.15;
T_1.8 ;
    %load/v 8, v0073DDB8_0, 16; Select 16 out of 32 bits
    %mov 24, 23, 1;
    %mov 25, 23, 1;
    %mov 26, 23, 1;
    %mov 27, 23, 1;
    %mov 28, 23, 1;
    %mov 29, 23, 1;
    %mov 30, 23, 1;
    %mov 31, 23, 1;
    %mov 32, 23, 1;
    %mov 33, 23, 1;
    %mov 34, 23, 1;
    %mov 35, 23, 1;
    %mov 36, 23, 1;
    %mov 37, 23, 1;
    %mov 38, 23, 1;
    %mov 39, 23, 1;
    %load/v 40, v0073DCB0_0, 16; Select 16 out of 32 bits
    %mov 56, 55, 1;
    %mov 57, 55, 1;
    %mov 58, 55, 1;
    %mov 59, 55, 1;
    %mov 60, 55, 1;
    %mov 61, 55, 1;
    %mov 62, 55, 1;
    %mov 63, 55, 1;
    %mov 64, 55, 1;
    %mov 65, 55, 1;
    %mov 66, 55, 1;
    %mov 67, 55, 1;
    %mov 68, 55, 1;
    %mov 69, 55, 1;
    %mov 70, 55, 1;
    %mov 71, 55, 1;
    %mul 8, 40, 32;
    %set/v v00770A28_0, 8, 16;
    %set/v v007708C8_0, 24, 16;
    %load/v 8, v007708C8_0, 16;
    %mov 24, 0, 1;
    %cmpi/u 8, 0, 17;
    %inv 4, 1;
    %mov 8, 4, 1;
    %ix/load 0, 2, 0;
    %set/x0 v0073B350_0, 8, 1;
    %load/v 8, v007708C8_0, 16;
    %mov 24, 0, 1;
    %cmpi/u 8, 0, 17;
    %inv 4, 1;
    %mov 8, 4, 1;
    %ix/load 0, 3, 0;
    %set/x0 v0073B350_0, 8, 1;
    %jmp T_1.15;
T_1.9 ;
    %load/v 8, v0073DCB0_0, 32;
    %load/v 40, v0073DDB8_0, 32;
    %mod/s 8, 40, 32;
    %set/v v007708C8_0, 8, 16;
    %load/v 8, v0073DCB0_0, 32;
    %load/v 40, v0073DDB8_0, 32;
    %div/s 8, 40, 32;
    %set/v v00770A28_0, 8, 16;
    %jmp T_1.15;
T_1.10 ;
    %load/v 8, v0073DDB8_0, 16; Only need 16 of 32 bits
; Save base=8 wid=16 in lookaside.
    %inv 8, 16;
    %set/v v00770A28_0, 8, 16;
    %jmp T_1.15;
T_1.11 ;
    %load/v 8, v0073DDB8_0, 16; Only need 16 of 32 bits
; Save base=8 wid=16 in lookaside.
    %inv 8, 16;
    %addi 8, 1, 16;
    %set/v v00770A28_0, 8, 16;
    %load/v 8, v00770A28_0, 16;
    %mov 24, 0, 1;
    %cmpi/u 8, 0, 17;
    %mov 8, 4, 1;
    %ix/load 0, 2, 0;
    %set/x0 v0073B350_0, 8, 1;
    %jmp T_1.15;
T_1.12 ;
    %load/v 8, v0073DDB8_0, 16; Select 16 out of 32 bits
    %mov 24, 0, 16;
    %addi 8, 1, 32;
    %set/v v00770A28_0, 8, 16;
    %jmp T_1.15;
T_1.13 ;
    %load/v 8, v0073DDB8_0, 16; Select 16 out of 32 bits
    %mov 24, 0, 16;
    %subi 8, 1, 32;
    %set/v v00770A28_0, 8, 16;
    %jmp T_1.15;
T_1.14 ;
    %ix/load 0, 2, 0;
    %set/x0 v0073B350_0, 2, 1;
    %load/v 8, v0073DDB8_0, 16; Select 16 out of 32 bits
    %mov 24, 0, 1;
    %load/v 25, v0073DCB0_0, 4; Only need 4 of 32 bits
; Save base=25 wid=4 in lookaside.
    %ix/get 0, 25, 4;
    %shiftl/i0  8, 17;
    %set/v v00770A28_0, 8, 16;
    %ix/load 0, 2, 0;
    %set/x0 v0073B350_0, 24, 1;
    %load/v 8, v0073DCB0_0, 4; Only need 4 of 32 bits
; Save base=8 wid=4 in lookaside.
    %ix/get 1, 8, 4;
    %jmp/1 T_1.40, 4;
    %load/x1p 8, v0073DDB8_0, 1;
    %jmp T_1.41;
T_1.40 ;
    %mov 8, 2, 1;
T_1.41 ;
; Save base=8 wid=1 in lookaside.
    %ix/load 0, 2, 0;
    %set/x0 v0073B350_0, 8, 1;
    %jmp T_1.15;
T_1.15 ;
    %load/v 8, v00770A28_0, 16;
    %mov 24, 0, 1;
    %cmpi/u 8, 0, 17;
    %mov 8, 4, 1;
    %ix/load 0, 0, 0;
    %set/x0 v0073B350_0, 8, 1;
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_1.42, 4;
    %load/x1p 8, v00770A28_0, 1;
    %jmp T_1.43;
T_1.42 ;
    %mov 8, 2, 1;
T_1.43 ;
; Save base=8 wid=1 in lookaside.
    %ix/load 0, 1, 0;
    %set/x0 v0073B350_0, 8, 1;
    %jmp T_1;
    .thread T_1;
    .scope S_00722AF8;
T_2 ;
    %wait E_0072D2D0;
    %load/v 8, v00770EF8_0, 16;
    %ix/load 0, 16, 0;
    %assign/v0 v00771340_0, 0, 8;
    %jmp T_2;
    .thread T_2, $push;
    .scope S_00722AF8;
T_3 ;
    %wait E_0072D2B0;
    %load/v 8, v00770E48_0, 16;
    %ix/load 0, 16, 0;
    %assign/v0 v00771340_0, 0, 8;
    %jmp T_3;
    .thread T_3, $push;
    .scope S_00722A70;
T_4 ;
    %vpi_call 2 120 "$monitor", "%t: a = %x, b = %x, result = %x %x, flag = %b", $time, v007714F8_0, v007712E8_0, v00771130_0, v007716B0_0, &PV<v00771760_0, 0, 4>;
    %set/v v00771188_0, 1, 1;
    %movi 8, 32767, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v007714F8_0, 0, 8;
    %movi 8, 32767, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v007712E8_0, 0, 8;
    %ix/load 0, 5, 0;
    %assign/v0 v007718C0_0, 0, 0;
    %delay 10, 0;
    %movi 8, 1, 5;
    %ix/load 0, 5, 0;
    %assign/v0 v007718C0_0, 0, 8;
    %delay 10, 0;
    %movi 8, 65535, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v007714F8_0, 0, 8;
    %movi 8, 65535, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v007712E8_0, 0, 8;
    %ix/load 0, 5, 0;
    %assign/v0 v007718C0_0, 0, 0;
    %delay 10, 0;
    %movi 8, 1, 5;
    %ix/load 0, 5, 0;
    %assign/v0 v007718C0_0, 0, 8;
    %delay 10, 0;
    %movi 8, 65535, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v007714F8_0, 0, 8;
    %movi 8, 65535, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v007712E8_0, 0, 8;
    %movi 8, 5, 5;
    %ix/load 0, 5, 0;
    %assign/v0 v007718C0_0, 0, 8;
    %delay 10, 0;
    %vpi_call 2 138 "$finish";
    %end;
    .thread T_4;
    .scope S_00722A70;
T_5 ;
    %delay 5, 0;
    %load/v 8, v00771188_0, 1;
    %inv 8, 1;
    %ix/load 0, 1, 0;
    %assign/v0 v00771188_0, 0, 8;
    %jmp T_5;
    .thread T_5;
# The file index is used to find the file name in the following table.
:file_names 3;
    "N/A";
    "<interactive>";
    "alu.v";
